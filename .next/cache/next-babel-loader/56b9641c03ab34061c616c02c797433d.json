{"ast":null,"code":"var _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Jose/pages/dummy.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { portrait } from \"../public/portrait\";\nimport { photoList } from \"../public/photoList\";\nexport default function Dummy() {\n  let pictures = [];\n  const pageSize = 8;\n  const totalPictures = photoList.length;\n  const totalPages = Math.ceil(totalPictures / pageSize);\n\n  if (indexPage === 1) {\n    pictures = photoList.slice(0, pageSize);\n  } else {\n    const skips = pageSize * (indexPage - 1);\n    pictures = photoList.slice(skips, skips + pageSize);\n  }\n\n  ;\n\n  function isActive(photo) {\n    if (photo === page) {\n      return true;\n    }\n  }\n\n  function mapPhotosToIndex(pictures) {\n    return pictures.map(photo => __jsx(\"div\", {\n      class: \"col-index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      id: `thumb_${photo.number}`,\n      src: `/photos_good/thumbnails/${photo.number}.png`,\n      alt: \"...\",\n      onClick: () => handlePhotoSelect(photo, event.target.id),\n      class: `thumb_${photo.number}` === activeThumbnail ? \"card-img-top indexThumbnailActive\" : \"card-img-top indexThumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    class: \"photoIndexRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    class: \"row photoIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, mapPhotosToIndex(pictures)));\n}","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Jose/pages/dummy.js"],"names":["React","useEffect","useState","portrait","photoList","Dummy","pictures","pageSize","totalPictures","length","totalPages","Math","ceil","indexPage","slice","skips","isActive","photo","page","mapPhotosToIndex","map","number","handlePhotoSelect","event","target","id","activeThumbnail"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,CAAjB;AACA,QAAMC,aAAa,GAAGJ,SAAS,CAACK,MAAhC;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,aAAa,GAAGD,QAA1B,CAAnB;;AAEA,MAAIM,SAAS,KAAK,CAAlB,EAAqB;AACnBP,IAAAA,QAAQ,GAAGF,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBP,QAAnB,CAAX;AACD,GAFD,MAEO;AACL,UAAMQ,KAAK,GAAGR,QAAQ,IAAIM,SAAS,GAAG,CAAhB,CAAtB;AACAP,IAAAA,QAAQ,GAAGF,SAAS,CAACU,KAAV,CAAgBC,KAAhB,EAAuBA,KAAK,GAAGR,QAA/B,CAAX;AACD;;AAAA;;AAGD,WAASS,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAIA,KAAK,KAAKC,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;AACF;;AAED,WAASC,gBAAT,CAA0Bb,QAA1B,EAAoC;AAClC,WAAOA,QAAQ,CAACc,GAAT,CAAaH,KAAK,IAEvB;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACE,MAAA,EAAE,EAAG,SAAQA,KAAK,CAACI,MAAO,EAD5B;AAEE,MAAA,GAAG,EAAG,2BAA0BJ,KAAK,CAACI,MAAO,MAF/C;AAGE,MAAA,GAAG,EAAC,KAHN;AAIE,MAAA,OAAO,EAAE,MAAMC,iBAAiB,CAACL,KAAD,EAAQM,KAAK,CAACC,MAAN,CAAaC,EAArB,CAJlC;AAKE,MAAA,KAAK,EAAG,SAAQR,KAAK,CAACI,MAAO,EAAtB,KAA4BK,eAA5B,GACL,mCADK,GAEL,6BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFK,CAAP;AAcD;;AAED,SACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,gBAAgB,CAACb,QAAD,CADrB,CADF,CADF;AAQD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { portrait } from \"../public/portrait\";\nimport { photoList } from \"../public/photoList\";\n\nexport default function Dummy() {\n  let pictures = [];\n  const pageSize = 8;\n  const totalPictures = photoList.length;\n  const totalPages = Math.ceil(totalPictures / pageSize);\n\n  if (indexPage === 1) {\n    pictures = photoList.slice(0, pageSize);\n  } else {\n    const skips = pageSize * (indexPage - 1);\n    pictures = photoList.slice(skips, skips + pageSize);\n  };\n\n\n  function isActive(photo) {\n    if (photo === page) {\n      return true;\n    }\n  }\n  \n  function mapPhotosToIndex(pictures) {\n    return pictures.map(photo => (\n\n      <div class=\"col-index\">\n          <img\n            id={`thumb_${photo.number}`}\n            src={`/photos_good/thumbnails/${photo.number}.png`}\n            alt=\"...\"\n            onClick={() => handlePhotoSelect(photo, event.target.id)}\n            class={`thumb_${photo.number}` === activeThumbnail ?\n              \"card-img-top indexThumbnailActive\" :\n              \"card-img-top indexThumbnail\" }\n          />\n      </div>\n    ));\n  }\n\n  return (\n    <div class=\"photoIndexRow\">\n      <div class=\"row photoIndex\">\n          {mapPhotosToIndex(pictures)}\n      </div>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}