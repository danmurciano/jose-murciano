{"ast":null,"code":"var _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Jose/components/Gallery/PhotoIndex.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { photoList } from \"../../public/photoList\";\n\nfunction PhotoIndex({\n  page,\n  setPage,\n  indexPage\n}) {\n  const [activeThumbnail, setActiveThumbnail] = React.useState(`thumb_${page.number}`);\n  let pictures = [];\n  const pageSize = 8;\n  const totalPictures = photoList.length;\n  const totalPages = Math.ceil(totalPictures / pageSize);\n\n  if (indexPage === 1) {\n    pictures = photoList.slice(0, pageSize);\n  } else {\n    const skips = pageSize * (indexPage - 1);\n    pictures = photoList.slice(skips, skips + pageSize);\n  }\n\n  ;\n\n  function isActive(photo) {\n    if (photo === page) {\n      return true;\n    }\n  }\n\n  function handlePhotoSelect(photo, id) {\n    setTimeout(setPage(photo), 3000);\n    setActiveThumbnail(id);\n  }\n\n  function mapPhotosToIndex(pictures) {\n    return pictures.map(photo => __jsx(\"div\", {\n      class: \"col-index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      id: `thumb_${photo.number}`,\n      src: `/images/thumbnails/${photo.number}.png`,\n      alt: \"...\",\n      onClick: () => handlePhotoSelect(photo, event.target.id),\n      class: `thumb_${photo.number}` === activeThumbnail ? \"indexThumbnailActive\" : \"indexThumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    class: \"photoIndexRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    class: \"row photoIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, mapPhotosToIndex(pictures)));\n}\n\nexport default PhotoIndex;","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Jose/components/Gallery/PhotoIndex.js"],"names":["React","useEffect","useState","photoList","PhotoIndex","page","setPage","indexPage","activeThumbnail","setActiveThumbnail","number","pictures","pageSize","totalPictures","length","totalPages","Math","ceil","slice","skips","isActive","photo","handlePhotoSelect","id","setTimeout","mapPhotosToIndex","map","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAApB,EAAkD;AAChD,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CT,KAAK,CAACE,QAAN,CAAgB,SAAQG,IAAI,CAACK,MAAO,EAApC,CAAhD;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,CAAjB;AACA,QAAMC,aAAa,GAAGV,SAAS,CAACW,MAAhC;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,aAAa,GAAGD,QAA1B,CAAnB;;AAEA,MAAIL,SAAS,KAAK,CAAlB,EAAqB;AACnBI,IAAAA,QAAQ,GAAGR,SAAS,CAACe,KAAV,CAAgB,CAAhB,EAAmBN,QAAnB,CAAX;AACD,GAFD,MAEO;AACL,UAAMO,KAAK,GAAGP,QAAQ,IAAIL,SAAS,GAAG,CAAhB,CAAtB;AACAI,IAAAA,QAAQ,GAAGR,SAAS,CAACe,KAAV,CAAgBC,KAAhB,EAAuBA,KAAK,GAAGP,QAA/B,CAAX;AACD;;AAAA;;AAGD,WAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAIA,KAAK,KAAKhB,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;AACF;;AAED,WAASiB,iBAAT,CAA2BD,KAA3B,EAAkCE,EAAlC,EAAsC;AACpCC,IAAAA,UAAU,CAAClB,OAAO,CAACe,KAAD,CAAR,EAAiB,IAAjB,CAAV;AACAZ,IAAAA,kBAAkB,CAACc,EAAD,CAAlB;AACD;;AAED,WAASE,gBAAT,CAA0Bd,QAA1B,EAAoC;AAClC,WAAOA,QAAQ,CAACe,GAAT,CAAaL,KAAK,IAEvB;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACE,MAAA,EAAE,EAAG,SAAQA,KAAK,CAACX,MAAO,EAD5B;AAEE,MAAA,GAAG,EAAG,sBAAqBW,KAAK,CAACX,MAAO,MAF1C;AAGE,MAAA,GAAG,EAAC,KAHN;AAIE,MAAA,OAAO,EAAE,MAAMY,iBAAiB,CAACD,KAAD,EAAQM,KAAK,CAACC,MAAN,CAAaL,EAArB,CAJlC;AAKE,MAAA,KAAK,EAAG,SAAQF,KAAK,CAACX,MAAO,EAAtB,KAA4BF,eAA5B,GACL,sBADK,GAEL,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFK,CAAP;AAcD;;AAED,SACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,gBAAgB,CAACd,QAAD,CADrB,CADF,CADF;AAOD;;AAED,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { photoList } from \"../../public/photoList\";\n\nfunction PhotoIndex({ page, setPage, indexPage }) {\n  const [ activeThumbnail, setActiveThumbnail ] = React.useState(`thumb_${page.number}`);\n  let pictures = [];\n  const pageSize = 8;\n  const totalPictures = photoList.length;\n  const totalPages = Math.ceil(totalPictures / pageSize);\n\n  if (indexPage === 1) {\n    pictures = photoList.slice(0, pageSize);\n  } else {\n    const skips = pageSize * (indexPage - 1);\n    pictures = photoList.slice(skips, skips + pageSize);\n  };\n\n\n  function isActive(photo) {\n    if (photo === page) {\n      return true;\n    }\n  }\n\n  function handlePhotoSelect(photo, id) {\n    setTimeout(setPage(photo), 3000);\n    setActiveThumbnail(id);\n  }\n\n  function mapPhotosToIndex(pictures) {\n    return pictures.map(photo => (\n\n      <div class=\"col-index\">\n          <img\n            id={`thumb_${photo.number}`}\n            src={`/images/thumbnails/${photo.number}.png`}\n            alt=\"...\"\n            onClick={() => handlePhotoSelect(photo, event.target.id)}\n            class={`thumb_${photo.number}` === activeThumbnail ?\n              \"indexThumbnailActive\" :\n              \"indexThumbnail\" }\n          />\n      </div>\n    ));\n  }\n\n  return (\n    <div class=\"photoIndexRow\">\n      <div class=\"row photoIndex\">\n          {mapPhotosToIndex(pictures)}\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoIndex;\n"]},"metadata":{},"sourceType":"module"}